-- Generated by Oracle SQL Developer Data Modeler 4.1.5.907
--   at:        2017-02-01 19:28:36 CST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g




DROP TABLE Moons CASCADE CONSTRAINTS ;

DROP TABLE Planetary_Systems CASCADE CONSTRAINTS ;

DROP TABLE Planets CASCADE CONSTRAINTS ;

DROP TABLE Relation_2 CASCADE CONSTRAINTS ;

DROP TABLE Relation_3 CASCADE CONSTRAINTS ;

DROP TABLE Star CASCADE CONSTRAINTS ;

DROP TABLE Terrain CASCADE CONSTRAINTS ;

CREATE TABLE Moons
  (
    Planets_planet_id INTEGER NOT NULL ,
    moon_id           INTEGER NOT NULL ,
    name              VARCHAR2 (255) NOT NULL ,
    orbit_type        VARCHAR2 (255) ,
    revolution_rate   INTEGER ,
    "size"            INTEGER
  ) ;
ALTER TABLE Moons ADD CONSTRAINT Moons_PK PRIMARY KEY ( moon_id ) ;


CREATE TABLE Planetary_Systems
  (
    ps_id  INTEGER NOT NULL ,
    name   VARCHAR2 (255) NOT NULL ,
    radius INTEGER ,
    mass   INTEGER
  ) ;
ALTER TABLE Planetary_Systems ADD CONSTRAINT Planetary_Systems_PK PRIMARY KEY ( ps_id ) ;


CREATE TABLE Planets
  (
    planet_id               INTEGER NOT NULL ,
    name                    VARCHAR2 (255) NOT NULL ,
    type                    VARCHAR2 (255) ,
    contains_water          CHAR (1) ,
    "size"                  INTEGER ,
    revolution_rate         INTEGER ,
    Planetary_Systems_ps_id INTEGER NOT NULL
  ) ;
ALTER TABLE Planets ADD CONSTRAINT Planets_PK PRIMARY KEY ( planet_id ) ;


CREATE TABLE Relation_2
  (
    Star_star_id      INTEGER NOT NULL ,
    Planets_planet_id INTEGER NOT NULL
  ) ;
ALTER TABLE Relation_2 ADD CONSTRAINT Relation_2_PK PRIMARY KEY ( Star_star_id, Planets_planet_id ) ;


CREATE TABLE Relation_3
  (
    Terrain_terrain_id INTEGER NOT NULL ,
    Planets_planet_id  INTEGER NOT NULL
  ) ;
ALTER TABLE Relation_3 ADD CONSTRAINT Relation_3_PK PRIMARY KEY ( Terrain_terrain_id, Planets_planet_id ) ;


CREATE TABLE Star
  (
    star_id     INTEGER NOT NULL ,
    name        VARCHAR2 (255) NOT NULL ,
    temperature INTEGER ,
    color       VARCHAR2 (255) ,
    "size"      INTEGER
  ) ;
ALTER TABLE Star ADD CONSTRAINT Star_PK PRIMARY KEY ( star_id ) ;


CREATE TABLE Terrain
  (
    terrain_id INTEGER NOT NULL ,
    name       VARCHAR2 (255) NOT NULL
  ) ;
ALTER TABLE Terrain ADD CONSTRAINT Terrain_PK PRIMARY KEY ( terrain_id ) ;


ALTER TABLE Relation_2 ADD CONSTRAINT FK_ASS_1 FOREIGN KEY ( Star_star_id ) REFERENCES Star ( star_id ) ;

ALTER TABLE Relation_2 ADD CONSTRAINT FK_ASS_2 FOREIGN KEY ( Planets_planet_id ) REFERENCES Planets ( planet_id ) ;

ALTER TABLE Relation_3 ADD CONSTRAINT FK_ASS_3 FOREIGN KEY ( Terrain_terrain_id ) REFERENCES Terrain ( terrain_id ) ;

ALTER TABLE Relation_3 ADD CONSTRAINT FK_ASS_4 FOREIGN KEY ( Planets_planet_id ) REFERENCES Planets ( planet_id ) ;

ALTER TABLE Moons ADD CONSTRAINT Moons_Planets_FK FOREIGN KEY ( Planets_planet_id ) REFERENCES Planets ( planet_id ) ;

ALTER TABLE Planets ADD CONSTRAINT Planets_Planetary_Systems_FK FOREIGN KEY ( Planetary_Systems_ps_id ) REFERENCES Planetary_Systems ( ps_id ) ;

CREATE SEQUENCE Moons_moon_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Moons_moon_id_TRG BEFORE
  INSERT ON Moons FOR EACH ROW WHEN (NEW.moon_id IS NULL) BEGIN :NEW.moon_id := Moons_moon_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE Planetary_Systems_ps_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Planetary_Systems_ps_id_TRG BEFORE
  INSERT ON Planetary_Systems FOR EACH ROW WHEN (NEW.ps_id IS NULL) BEGIN :NEW.ps_id := Planetary_Systems_ps_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE Planets_planet_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Planets_planet_id_TRG BEFORE
  INSERT ON Planets FOR EACH ROW WHEN (NEW.planet_id IS NULL) BEGIN :NEW.planet_id := Planets_planet_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE Star_star_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Star_star_id_TRG BEFORE
  INSERT ON Star FOR EACH ROW WHEN (NEW.star_id IS NULL) BEGIN :NEW.star_id := Star_star_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE Terrain_terrain_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Terrain_terrain_id_TRG BEFORE
  INSERT ON Terrain FOR EACH ROW WHEN (NEW.terrain_id IS NULL) BEGIN :NEW.terrain_id := Terrain_terrain_id_SEQ.NEXTVAL;
END;
/


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             7
-- CREATE INDEX                             0
-- ALTER TABLE                             13
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           5
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          5
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
